plugins {
    id "com.jfrog.artifactory" version "4.0.0"
}

group 'uk.co.mruoc.wso2'
version '1.0.0'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    wso2
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

repositories {
    mavenCentral()
    maven { url 'http://maven.wso2.org/nexus/content/groups/wso2-public/' }
    maven { url 'http://artifactory.shared.devops.dev01.aws.travisperkins.com:8080/artifactory/middleware-snapshots' }
}

dependencies {
    compile group: 'org.wso2.carbon', name: 'org.wso2.carbon.authenticator.stub', version: '4.2.0'
    compile group: 'org.wso2.developerstudio', name: 'org.wso2.developerstudio.eclipse.carbonserver.base', version: '3.6.0'
    compile group: 'org.wso2.carbon', name: 'org.wso2.carbon.application.mgt.stub', version: '4.2.0'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.5.2'
    testCompile group: 'eu.codearte.catch-exception', name: 'catch-exception', version: '1.4.4'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '2.0.2-beta'
    testCompile group: 'org.testcontainers', name: 'testcontainers', version: '1.1.6'
    testCompile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'
    testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.5'

    wso2 group: 'uk.co.tpplc.middleware.json-validator-mediator', name: 'json-validator-mediator-config-local', version: '1.0.0-SNAPSHOT', ext: 'car'
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

tasks.withType(Test) {
    systemProperty "javax.net.ssl.trustStore", "$projectDir/truststore/cacerts"
    reports.html.destination = file("${reporting.baseDir}/${name}")
}


task listCars << {
    configurations.wso2.each { File file -> println file.absolutePath }
}
